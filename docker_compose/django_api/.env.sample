# This is a .env.sample file.
# Duplicate this file as .env or rename it
# and set the environment variables to match your
# desired config.

# Change all values '< value >' to yours.


# Django

DJANGO_SECRET_KEY=< dango_secret_key_string >
DEBUG=< set_debug >
# Write the localhost as string separated by comma without spaces
# For example 'localhost,127.0.0.1,[::1],0.0.0.0'
ALLOWED_HOSTS=< hosts_as_string_separated_by_comma >
# Write the CSRF_TRUSTED_ORIGINS and CORS_ALLOWED_ORIGINS values 
# as string separated by comma without spaces
# For example 'http://127.0.0.1:8000,http://0.0.0.0:8000,http://localhost:8000'
CSRF_TRUSTED_ORIGINS=< hosts_as_string_separated_by_commas >
CORS_ALLOWED_ORIGINS=< hosts_as_string_separated_by_commas >


# Django database

DB_NAME=< database_name >
DB_USER=< database_user >
DB_PASSWORD=< database_password >
DB_HOST=< database_host >  # name of the host service. For example: 'postgres'
# DB_PORT=< database_port >


# Django Admin

DJANGO_SUPERUSER_USERNAME=< username >
DJANGO_SUPERUSER_EMAIL=< email >
DJANGO_SUPERUSER_PASSWORD=< password >


# PostgreSQL

POSTGRES_USER=< postgres_user >
POSTGRES_PASSWORD=< postgres_password >
POSTGRES_DB=< postgres_database >


# SQLite path

# From this database we take all the data for postgres
SQLITE_DB=< sqlite_database >  # 'db.sqlite'


# Api variables

VALUE_PAGE=< number >  # number of objects to display by the api per page.


# Docker compose variales

COMPOSE_VERSION=< compose_version >   # for example: 3
POSTGRES_VERSION=< image_version >    # for example: 14.8
INTERVAL_CHECK=< interval_check >     # for example: '5s'
TIMEOUT_CHECK=< timeout_check >       # for example: '60s'
RETRIES_CHECK=< retries_check >       # for example: 5
# START_CHECK=< start_check >         # for example:'30s'
NGINX_VERSION=< image_version >       # for example: 1.19.2
NGINX_PORTS=< image_version >         # for example: '8000:80'
